---
import Layout from '../layouts/Layout.astro';

---

<Layout title="每日热点数据筛选工具">
<div class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-8 max-w-4xl">
        <div class="bg-white rounded-xl shadow-md p-6 mb-8">
            <h1 class="text-2xl font-bold text-gray-800 mb-4">每日热点数据筛选工具</h1>
            <p class="text-gray-600 mb-6">上传包含 JSON 数组的文件，解析并展示内容</p>
                       
            <div class="flex flex-col items-center justify-center border-2 border-dashed border-gray-300 rounded-lg p-8 mb-6 bg-gray-50">
                <input type="file" id="fileInput" accept=".txt" class="hidden">
                <label for="fileInput" class="cursor-pointer">
                    <div class="flex flex-col items-center">
                        <i class="fas fa-cloud-upload-alt text-4xl text-blue-500 mb-3"></i>
                        <p class="text-gray-700 font-medium mb-2">点击选择文件或拖拽到此处</p>
                        <p class="text-sm text-gray-500">支持 .json .txt 文件，内容应为 JSON 数组格式</p>
                    </div>
                </label>
            </div>
            
            <div id="fileInfo" class="hidden bg-blue-50 text-blue-800 rounded-lg p-3 mb-4">
                <i class="fas fa-info-circle mr-2"></i>
                <span id="fileName"></span>
            </div>
        </div>
        
        <div id="dataContainer" class="hidden">
            <!-- 搜索框 -->
        <div class="relative mb-6">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <i class="fas fa-search text-gray-400"></i>
            </div>
            <input 
                type="text" 
                id="searchInput" 
                placeholder="搜索标题、摘要或内容..." 
                class="pl-10 pr-4 py-2 w-full border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all"
            >
            <div class="absolute inset-y-0 right-0 pr-3 flex items-center">
                <span id="searchCount" class="text-sm text-gray-500 hidden">0 条结果</span>
            </div>
        </div>
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-xl font-semibold text-gray-800">解析结果</h2>
                <div class="flex items-center">
                    <span id="selectedCount" class="text-sm text-gray-500 mr-3">已选 0 项</span>
                    <button id="selectAllBtn" class="text-sm text-blue-600 hover:text-blue-800 mr-4">全选</button>
                    <button id="exportBtn" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors">
                        <i class="fas fa-download mr-2"></i>导出选中项
                    </button>
                </div>
            </div>
            
            <div id="itemsList" class="space-y-4"></div>
            <div id="noResults" class="hidden text-center py-8 text-gray-500">
                <i class="fas fa-search text-3xl mb-2"></i>
                <p>没有找到匹配的结果</p>
            </div>
        </div>
    </div>
    <script is:inline>
        document.addEventListener('DOMContentLoaded', function() {
            const fileInput = document.getElementById('fileInput');
            const fileInfo = document.getElementById('fileInfo');
            const fileName = document.getElementById('fileName');
            const dataContainer = document.getElementById('dataContainer');
            const itemsList = document.getElementById('itemsList');
            const selectAllBtn = document.getElementById('selectAllBtn');
            const exportBtn = document.getElementById('exportBtn');
            const selectedCount = document.getElementById('selectedCount');
            const searchInput = document.getElementById('searchInput');
            const searchCount = document.getElementById('searchCount');
            const noResults = document.getElementById('noResults');
            
            let parsedData = [];
            let selectedItems = new Set();
            let filteredData = [];
            let currentSearchTerm = '';
            
            // 拖拽上传功能
            const dropZone = document.querySelector('.border-dashed');
            dropZone.addEventListener('dragover', (e) => {
                e.preventDefault();
                dropZone.classList.add('border-blue-400', 'bg-blue-50');
            });
            
            dropZone.addEventListener('dragleave', () => {
                dropZone.classList.remove('border-blue-400', 'bg-blue-50');
            });
            
            dropZone.addEventListener('drop', (e) => {
                e.preventDefault();
                dropZone.classList.remove('border-blue-400', 'bg-blue-50');
                if (e.dataTransfer.files.length) {
                    fileInput.files = e.dataTransfer.files;
                    handleFileUpload();
                }
            });
            
            // 文件上传处理
            fileInput.addEventListener('change', handleFileUpload);
            
            function handleFileUpload() {
                const file = fileInput.files[0];
                if (!file) return;
                
                fileName.textContent = `已选择文件: ${file.name}`;
                fileInfo.classList.remove('hidden');
                
                const reader = new FileReader();
                reader.onload = function(e) {
                    try {
                        const content = e.target.result;
                        parsedData = JSON.parse(content);
                        
                        if (!Array.isArray(parsedData)) {
                            throw new Error('文件内容应为 JSON 数组格式');
                        }
                        
                        filteredData = [...parsedData];
                        renderDataItems();
                        dataContainer.classList.remove('hidden');
                    } catch (error) {
                        alert('解析文件出错: ' + error.message);
                        console.error(error);
                    }
                };
                reader.readAsText(file);
            }
            
            // 搜索功能
            searchInput.addEventListener('input', function() {
                currentSearchTerm = this.value.trim().toLowerCase();
                if (currentSearchTerm === '') {
                    filteredData = [...parsedData];
                    searchCount.classList.add('hidden');
                } else {
                    filteredData = parsedData.filter(item => {
                        const titleMatch = item.title && item.title.toLowerCase().includes(currentSearchTerm);
                        const summaryMatch = item.summary && item.summary.toLowerCase().includes(currentSearchTerm);
                        const contentMatch = item.content_original && item.content_original.toLowerCase().includes(currentSearchTerm);
                        return titleMatch || summaryMatch || contentMatch;
                    });
                    
                    searchCount.textContent = `${filteredData.length} 条结果`;
                    searchCount.classList.remove('hidden');
                }
                
                renderDataItems();
            });
            
            // 高亮文本
            function highlightText(text) {
                if (!currentSearchTerm || !text) return text;
                
                const regex = new RegExp(currentSearchTerm, 'gi');
                return text.replace(regex, match => `<span class="highlight">${match}</span>`);
            }
            
            // 渲染数据项
            function renderDataItems() {
                itemsList.innerHTML = '';
                selectedItems.clear();
                updateSelectedCount();
                
                if (filteredData.length === 0) {
                    noResults.classList.remove('hidden');
                    return;
                } else {
                    noResults.classList.add('hidden');
                }
                
                filteredData.forEach((item, index) => {
                    const originalIndex = parsedData.findIndex(originalItem => originalItem === item);
                    const itemElement = document.createElement('div');
                    itemElement.className = 'bg-white rounded-lg shadow-sm p-4 card-hover fade-in';
                    itemElement.innerHTML = `
                        <div class="flex items-start">
                            <input type="checkbox" class="item-checkbox mt-1 mr-3 h-4 w-4 text-blue-600 rounded" data-index="${originalIndex}">
                            <div class="flex-1">
                                <div class="flex justify-between items-start">
                                    <h3 class="font-medium text-gray-800">${highlightText(item.title) || '无标题'}</h3>
                                    <a href="${item.url || '#'}" target="_blank" class="text-blue-600 hover:text-blue-800 text-sm ml-2 whitespace-nowrap">
                                        <i class="fas fa-external-link-alt mr-1"></i>查看链接
                                    </a>
                                </div>
                                <p class="text-gray-600 text-sm mt-1 mb-2">${highlightText(item.summary) || '无摘要'}</p>
                                <button class="toggle-content text-blue-600 hover:text-blue-800 text-sm font-medium flex items-center">
                                    <i class="fas fa-chevron-down text-xs mr-1"></i>
                                    <span>展开详情</span>
                                </button>
                                <div class="expand-content mt-2 text-gray-700 text-sm bg-gray-50 rounded p-3">
                                    ${highlightText(item.content_original) || '无详细内容'}
                                </div>
                            </div>
                        </div>
                    `;
                    
                    itemsList.appendChild(itemElement);
                    
                    // 添加展开/收起功能
                    const toggleBtn = itemElement.querySelector('.toggle-content');
                    const content = itemElement.querySelector('.expand-content');
                    const chevron = itemElement.querySelector('.fa-chevron-down');
                    
                    toggleBtn.addEventListener('click', () => {
                        content.classList.toggle('expanded');
                        const isExpanded = content.classList.contains('expanded');
                        chevron.classList.toggle('transform', isExpanded);
                        chevron.classList.toggle('rotate-180', isExpanded);
                        toggleBtn.querySelector('span').textContent = isExpanded ? '收起详情' : '展开详情';
                    });
                    
                    // 添加复选框事件
                    const checkbox = itemElement.querySelector('.item-checkbox');
                    checkbox.addEventListener('change', function() {
                        if (this.checked) {
                            selectedItems.add(originalIndex);
                        } else {
                            selectedItems.delete(originalIndex);
                        }
                        updateSelectedCount();
                    });
                });
            }
            
            // 全选功能
            selectAllBtn.addEventListener('click', function() {
                const checkboxes = document.querySelectorAll('.item-checkbox');
                const allSelected = selectedItems.size === filteredData.length;
                
                checkboxes.forEach((checkbox, index) => {
                    const originalIndex = parseInt(checkbox.dataset.index);
                    checkbox.checked = !allSelected;
                    if (!allSelected) {
                        selectedItems.add(originalIndex);
                    } else {
                        selectedItems.delete(originalIndex);
                    }
                });
                
                updateSelectedCount();
            });
            
            // 更新选中计数
            function updateSelectedCount() {
                selectedCount.textContent = `已选 ${selectedItems.size} 项`;
            }
            
            // 导出功能
            exportBtn.addEventListener('click', function() {
                if (selectedItems.size === 0) {
                    alert('请至少选择一项内容');
                    return;
                }
                
                let markdownContent = '';
                Array.from(selectedItems).sort().forEach((index, i) => {
                    const item = parsedData[index];
                    markdownContent += `${i+1}. ${item.title || '无标题'}\n${item.url || '#'}\n${item.summary || '无摘要'}\n\n`;
                });
                
                const blob = new Blob([markdownContent], { type: 'text/markdown' });
                const url = URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `exported_data_${new Date().toISOString().slice(0,10)}.md`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                URL.revokeObjectURL(url);
            });
        });
    </script>
</div>
</Layout>